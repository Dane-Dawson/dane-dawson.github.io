{"version":3,"sources":["images/Rocket-Dane.png","images/pika-construction.gif","components/terminal/Terminal.js","App.js","reportWebVitals.js","index.js"],"names":["Terminal","props","useState","terminalDisplay","setTerminalDisplay","className","handleTerminalDisplay","terminalInput","onChange","event","setTerminalInput","target","value","command","toLowerCase","includes","handleChange","App","showTerminal","toggleTerminal","onClick","prev","renderTerminal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,ICAA,I,YCgEAA,MA7Df,SAAkBC,GACd,MAA8CC,mBAAU,IAAxD,mBAAOC,EAAP,KAAwBC,EAAxB,KAoCF,OACE,sBAAKC,UAAU,eAAf,UACA,mBAAGA,UAAU,oBAAb,mCACA,mBAAGA,UAAU,mBAAb,6CACA,mBAAGA,UAAU,gBAAb,mCACA,mBAAGA,UAAU,gBAAb,0BACA,mBAAGA,UAAU,0BAAb,gDACA,mBAAGA,UAAU,oBAAb,oDACA,uBACA,4BAjC8B,WAC1B,OAAQF,GACJ,IAAK,OACD,OAAO,mBAAGE,UAAU,mBAAb,uFACX,IAAK,QACD,MAAO,GACX,IAAK,WACD,OAAQ,gCACR,mBAAGA,UAAU,8BAAb,qDACA,mBAAGA,UAAU,8BAAb,uEAGJ,IAAK,YACD,OAAO,gCACH,mBAAGA,UAAU,+BAAb,6CACA,mBAAGA,UAAU,+BAAb,6CACA,mBAAGA,UAAU,+BAAb,gCACA,mBAAGA,UAAU,+BAAb,uCACA,mBAAGA,UAAU,+BAAb,oDAeZC,KACJ,sBAAKD,UAAU,qBAAf,UACA,sBAAMA,UAAU,qBAAhB,8CACA,sBAAMA,UAAU,6BAAhB,SAA8CJ,EAAMM,cAAgB,KAAO,oCAC3E,uBACAF,UAAU,iBACVG,SAAU,SAACC,GAAD,OAjDW,SAACA,GAClBR,EAAMS,iBAAiBD,EAAME,OAAOC,OACpC,IACIC,EAAUJ,EAAME,OAAOC,MAAME,cADd,CAAC,OAAQ,WAAY,QAAS,aAEhCC,SAASF,KACtBT,EAAmBS,GACnBZ,EAAMS,iBAAiB,KA2CZM,CAAaP,IAChCG,MAAOX,EAAMM,uBCZFU,MApCf,WACE,MAA2Bf,mBAAU,GAArC,mBACA,GADA,UAC0CA,mBAAS,KAAnD,mBAAOK,EAAP,KAAsBG,EAAtB,KACA,EAAuCR,oBAAS,GAAhD,mBAAOgB,EAAP,KAAqBC,EAArB,KAQA,OACE,qBAAKd,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,6GAGA,wBAAQA,UAAU,gBAAgBe,QAAS,kBAAID,GAAe,SAAAE,GAAI,OAAGA,MAArE,2BACA,uBAdiB,WACrB,GAAIH,EACF,OAAO,cAAC,EAAD,CAAUR,iBAAkBA,EAAkBH,cAAeA,IAajEe,SChBMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aec166de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rocket-Dane.3d2ba147.png\";","export default __webpack_public_path__ + \"static/media/pika-construction.af5a0265.gif\";","import './Terminal.css';\nimport React, { useState } from 'react';\n\nfunction Terminal(props) {\n    const [terminalDisplay, setTerminalDisplay] = useState( '')\n\n    const handleChange = (event) => {\n        props.setTerminalInput(event.target.value)\n        let commandArray = [\"help\", \"commands\", \"clear\", \"limmerick\"]\n        let command = event.target.value.toLowerCase()\n        if (commandArray.includes(command)){\n            setTerminalDisplay(command)\n            props.setTerminalInput('')\n        }\n    }\n\n    const handleTerminalDisplay = () => {\n        switch (terminalDisplay){\n            case \"help\":\n                return <p className=\"terminal-display\">I mean...I wish I could, I need some myself! Have you tried using Google?</p>;\n            case \"clear\":\n                return \"\";\n            case \"commands\":\n                return (<div>\n                <p className=\"terminal-display commands-1\">Seriously? Just look up like...2 lines.</p>\n                <p className=\"terminal-display commands-2\">I know devs don't read documentation, but come on now.</p>\n\n                </div>)\n            case \"limmerick\":\n                return(<div>\n                    <p className=\"terminal-display limmerick-1\">There once was a coder who came</p>\n                    <p className=\"terminal-display limmerick-2\">to a site engineered by a Dane.</p>\n                    <p className=\"terminal-display limmerick-3\">His work is unique</p>\n                    <p className=\"terminal-display limmerick-4\">and he's up for critique,</p>\n                    <p className=\"terminal-display limmerick-5\">but be gentle to cause him no pain</p>\n                </div>)\n        }\n    }\n\n    \n  return (\n    <div className=\"terminal-div\">\n    <p className=\"webpack-compiling\">webpack: Compiling...</p>\n    <p className=\"webpack-compiled\">webpack: Compiled successfully.</p>\n    <p className=\"terminal-hash\">Hash: 8675309-4eva&42</p>\n    <p className=\"terminal-time\">Time: 1337ms</p>\n    <p className=\"terminal-enter-commands\">Enter commands below to explore...</p>\n    <p className=\"terminal-commands\">help || clear || commands || limmerick</p>\n    <br/>\n    <p>{handleTerminalDisplay()}</p>\n    <div className=\"terminal-input-div\">\n    <span className=\"terminal-file-path\"> dane@Danes-Site dane-the-site %</span>\n    <span className=\"terminal-input-placeholder\">{props.terminalInput ? null : \"Click here to type a command...\"}</span>\n    <input \n    className=\"terminal-input\"\n    onChange={(event)=>handleChange(event)} \n    value={props.terminalInput}\n    />\n    </div>\n    \n    </div>\n  );\n}\n\nexport default Terminal;","import React, { useState } from 'react';\nimport './App.css';\n\nimport rocketDane from './images/Rocket-Dane.png'\nimport piConstruction from './images/pika-construction.gif'\nimport Terminal from './components/terminal/Terminal'\n\n\nfunction App() {\n  const [pets, petPikachu] = useState( 0 );\n  const [terminalInput, setTerminalInput] = useState('')\n  const [showTerminal, toggleTerminal] = useState(false)\n\n  const renderTerminal = () => {\n    if (showTerminal){\n      return <Terminal setTerminalInput={setTerminalInput} terminalInput={terminalInput}/>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={rocketDane} className=\"rocket-dane\" alt=\"logo\" /> */}\n        <p>\n          Welcome to Dane's site! It's under construction, but enjoy what's published!\n        </p>\n        <button className=\"show-terminal\" onClick={()=>toggleTerminal(prev=>!prev)}>Open Terminal</button>\n        <br/>\n        {renderTerminal()}\n        {/* <p>\n          It's currently under construction. Click to pet the Pikachu while you wait.\n        </p>\n        <img src={piConstruction} \n        onClick={()=>petPikachu(prev => prev + 1)}\n        className=\"construction-pika\" \n        alt=\"under construction\" />\n          <p>\n          {pets} Pikachu pets. Well done.\n          </p> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}