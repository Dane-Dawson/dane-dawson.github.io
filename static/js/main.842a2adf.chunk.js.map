{"version":3,"sources":["components/projects/images/git-icon.png","images/Rocket-Dane.png","images/pika-construction.gif","components/terminal/TerminalDisplayReadouts.js","components/terminal/Terminal.js","components/home/Home.js","components/projects/ProjectsData.js","components/projects/images/javascript.svg","components/projects/images/react.svg","components/projects/images/json.svg","components/projects/images/jsonserver.png","components/projects/images/css.svg","components/projects/images/html.png","components/projects/images/ruby.svg","components/projects/images/rubyonrails.svg","components/projects/Icons.js","components/projects/ProjectCard.js","components/projects/Projects.js","App.js","reportWebVitals.js","index.js"],"names":["handleTerminalDisplay","terminalDisplay","program","launchProgram","help","terminalInitialize","commands","limmerick","commandsArray","programsArray","commandsListPTag","className","join","terminalInput","commandLine","handleChange","onChange","event","value","Terminal","useState","setTerminalDisplay","setCommandLine","setProgram","target","command","toLowerCase","includes","Home","projectsArray","name","url","description","tech","returnIcons","techArray","projectIcons","iconsArray","map","icon","props","alt","console","log","src","javascriptIcon","reactIcon","jsonIcon","jsonServerIcon","cssIcon","htmlIcon","rubyIcon","railsIcon","ProjectCard","project","href","gitIcon","Projects","searchTerm","setSearchTerm","filterTerm","setFilterTerm","e","placeholder","projects","filter","filteredProjects","idx","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.842a2adf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/git-icon.c8007a9f.png\";","export default __webpack_public_path__ + \"static/media/Rocket-Dane.3d2ba147.png\";","export default __webpack_public_path__ + \"static/media/pika-construction.af5a0265.gif\";","// Input for handling commands, return is associated to the const created below associated with the recieved terminalDisplay\n\nexport const handleTerminalDisplay = (terminalDisplay, program) => {\n    // depending on program set in terminal, it returns a different sequences of responses.\n    // match case with string in programsArray and it's related const below\n    switch (program){\n        case \"launch\":\n            return launchProgram(terminalDisplay)\n    }\n    \n};\n\n// collections of inputs for each program, named by [program]Program where [program] is recieved from Terminal\n\nconst launchProgram = (terminalDisplay) => {\n    switch (terminalDisplay) {\n        case \"clear\":\n          return \"\";\n        case \"help\":\n          return help();\n        case \"initialize\":\n          return terminalInitialize();\n        case \"commands\":\n          return commands();\n        case \"limmerick\":\n          return limmerick();\n      }\n}\n\n// array of commands available\n// string entered here needs a matching constant below it with a readout, then a switch case above to initialize it.\n\nexport const commandsArray = [\"commands\", \"clear\", \"initialize\", \"help\", \"limmerick\"]\n\n// programs available\n\nexport const programsArray = [\"launch\"]\n\n// generate dynamic list of commands as a p tag\n\nconst commandsListPTag = () => <p className=\"terminal-commands\">{commandsArray.join(\" || \")}</p>\n\n//  !!   commands returns for the terminal in the \"launch\" program\n\nexport const commands = () => {\n    return (<div>\n        <br/>\n        <p>...</p>\n        <br/>\n        <p className=\"terminal-display commands-1\">Seriously? It was literally on the screen a second ago.</p>\n        <p className=\"terminal-display commands-2\">I know devs don't read documentation, but come on now.</p>\n        <br />\n        <p className=\"terminal-display commands-3\">You REALLY can't remember?</p>\n        <br/>\n        <p className=\"terminal-display commands-4\">Fine.</p>\n        <br/>\n        {commandsListPTag()}\n        </div>)\n}\n\nexport const help = () => {\n    return (<div>\n        <p className=\"terminal-display\">I mean...I wish I could, I need some myself!</p>\n        <br/>\n        <p className=\"terminal-display help-1\">Have you tried googling it?</p>\n        </div>)\n}\n\nexport const limmerick = () => {\n    return (<div>\n                    <p className=\"terminal-display limmerick-1\">There once was a coder who came</p>\n                    <p className=\"terminal-display limmerick-2\">to a site engineered by a Dane.</p>\n                    <p className=\"terminal-display limmerick-3\">His work is unique</p>\n                    <p className=\"terminal-display limmerick-4\">and he's up for critique,</p>\n                    <p className=\"terminal-display limmerick-5\">but be gentle to cause him no pain.</p>\n                    <br/>\n                    <br/>\n                    <p className=\"terminal-display limmerick-6\">...please?</p>\n        </div>\n    )\n}\n\n\n// Initial loading screen for the terminal\n\nexport const terminalInitialize = () => {\n    return (<span>\n  <p className=\"webpack-compiling\">webpack: Compiling...</p>\n    <p className=\"webpack-compiled\">webpack: Compiled successfully.</p>\n    <p className=\"terminal-hash\">Hash: 8675309-4eva&42</p>\n    <p className=\"terminal-time\">Time: 1337ms</p>\n    <p className=\"terminal-enter-commands\">\n      Enter commands below to explore...\n    </p>\n      {commandsListPTag()}\n    </span>\n    )\n}\n\n\n//  Bottom row, terminal location and input\n\nexport const terminalInput = (commandLine, handleChange) => {\n    return (<div className=\"terminal-input-div\">\n    <span className=\"terminal-file-path\">\n      dane@Danes-Site dane-the-site %\n    </span>\n    <span className=\"terminal-input-placeholder\">\n      {commandLine ? null : \"Click here to type a command...\"}\n    </span>\n    <input\n      className=\"terminal-input\"\n      onChange={(event) => handleChange(event)}\n      value={commandLine}\n    />\n  </div>)\n}","// import \"./Terminal.css\";\nimport React, { useState } from \"react\";\n\nimport { handleTerminalDisplay, commandsArray, programsArray, terminalInput } from \"./TerminalDisplayReadouts\";\n\nfunction Terminal() {\n  const [terminalDisplay, setTerminalDisplay] = useState(\"initialize\");\n  const [commandLine, setCommandLine] = useState('')\n  const [program, setProgram] = useState('launch')\n\n  const handleChange = (event) => {\n    setCommandLine(event.target.value);\n    let command = event.target.value.toLowerCase();\n    if (commandsArray.includes(command)) {\n      setTerminalDisplay(command);\n      setCommandLine(\"\");\n    } else if (programsArray.includes(command)) {\n      setProgram(command);\n      setTerminalDisplay(\"initialize\");\n      setCommandLine(\"\");\n    }\n  };\n\n  return (\n    <div className=\"terminal-div\">\n      {handleTerminalDisplay(terminalDisplay, program)}\n      {terminalInput(commandLine, handleChange)}\n    </div>\n  );\n}\n\nexport default Terminal;\n","\nimport React, { useState } from \"react\";\n\nexport default function Home(){\n    return(<div className=\"home-main-div\">\n    <h1>Dane Dawson</h1>\n        <p>\n        Born and raised in Austin, Texas, I have led a unique and entertaining life thusfar (in my humble opinion).\n        </p>\n        <p>\n            Happily married with a 3 year old tornado for a daughter, I've made the relatively recent career shift into programming and tech.\n        </p>\n\n        <p>\n            Feel free to explore this portfolio that is a viewport into the chaos that is my mind!\n        </p>\n\n        <p>\n            This project was created with React using only hooks with custom CSS throughout.\n        </p>\n\n        <p>\n            It also contains a potentially dangerous amount of my own sense of humor and personality.\n        </p>\n\n        <p>\n            Check back regularly, as this site is consistently under construction.\n        </p>\n    </div>\n    )\n}","export const projectsArray = [\n    {\n        name: \"Proptipus\",\n        url: \"https://github.com/Dane-Dawson/proptipus\",\n        description: \"'Proptipus the cephalopod has a plethora of pretty pleasant past-times, but priorly preconcieved postulations prevent our poor Proptipus from performing his practical pursuits.' This lab is an exploration of Props, State, and data management in React.\",\n        tech: \"javascript, react, css, html\"\n},{\n    name: \"JSON-Server Intro\",\n    url: \"https://github.com/Dane-Dawson/json-server-practice\",\n    description: \"A base introduction to JSON-Server, how to build one and how to personalize it to your needs.\",\n    tech: \"json-server, javascript\"\n},{\n    name: \"JSON DB collection\",\n    url: \"https://github.com/Dane-Dawson/json-server-collection\",\n    description: \"Accumulated data collections in JSON-server format.\",\n    tech: \"json-server, javascript\"\n},{\n    name: \"React mini coding checkpoints\",\n    url: \"https://github.com/Dane-Dawson/react-mini-coding-checkpoints\",\n    description: \"A series of playful and fun React projects designed to reinforce fondational React concepts\",\n    tech: \"react, css, html, json-server, javascript\"\n},{\n    name: \"Login template - Backend\",\n    url: \"https://github.com/Dane-Dawson/logintemp-backend\",\n    description: \"Part of a two part repo collection to show an example of using a Ruby on Rails API for token authentication to a React front end\",\n    tech: \"ruby, rails\"\n},{\n    name: \"Login template - Frontend\",\n    url: \"https://github.com/Dane-Dawson/logintemp-frontend\",\n    description: \"Part of a two part repo collection to show an example of using a Ruby on Rails API for token authentication to a React front end\",\n    tech: \"react, css, html, javascript, rails\"\n}\n]","export default __webpack_public_path__ + \"static/media/javascript.c981b611.svg\";","export default __webpack_public_path__ + \"static/media/react.0c61afcf.svg\";","export default __webpack_public_path__ + \"static/media/json.b41b34f9.svg\";","export default __webpack_public_path__ + \"static/media/jsonserver.f732b9e0.png\";","export default __webpack_public_path__ + \"static/media/css.4228c3fe.svg\";","export default __webpack_public_path__ + \"static/media/html.c5341754.png\";","export default __webpack_public_path__ + \"static/media/ruby.a19b3660.svg\";","export default __webpack_public_path__ + \"static/media/rubyonrails.ed0010ac.svg\";","import javascriptIcon from \"./images/javascript.svg\";\nimport reactIcon from \"./images/react.svg\";\nimport jsonIcon from \"./images/json.svg\";\nimport jsonServerIcon from \"./images/jsonserver.png\"\nimport cssIcon from \"./images/css.svg\"\nimport htmlIcon from \"./images/html.png\"\nimport rubyIcon from \"./images/ruby.svg\"\nimport railsIcon from \"./images/rubyonrails.svg\"\n\n\nexport const returnIcons = (techArray) => {\n    let projectIcons = iconsArray.map(icon => techArray.includes(icon.props.alt) ? icon : null )\n    console.log(projectIcons)\n    return projectIcons\n}\n\n// img tags witha  classname project-icon to catch icon styling, a classname matching the tech for background coloring\n// and an alt tag that matches the tech list in ProjectsData.js.  Icons sourced from https://simpleicons.org/\nexport const iconsArray = [\n    <img className=\"javascript project-icon\" src={javascriptIcon} alt=\"javascript\" key=\"javascript\"/>,\n    <img className=\"react project-icon\" src={reactIcon} alt=\"react\" key=\"react\"/>,\n    <img className=\"json project-icon\" src={jsonIcon} alt=\"json\" key=\"json\"/>,\n    <img className=\"json-server project-icon\" src={jsonServerIcon} alt=\"json-server\" key=\"json-server\"/>,\n    <img className=\"css project-icon\" src={cssIcon} alt=\"css\" key=\"css\"/>,\n    <img className=\"html project-icon\" src={htmlIcon} alt=\"html\" key=\"html\"/>,\n    <img className=\"ruby project-icon\" src={rubyIcon} alt=\"ruby\" key=\"ruby\"/>,\n    <img className=\"rails project-icon\" src={railsIcon} alt=\"rails\" key=\"rails\"/>,\n]","import React, { useState } from \"react\";\n\nimport \"./ProjectCard.css\"\n\nimport { returnIcons } from \"./Icons\";\nimport gitIcon from \"./images/git-icon.png\";\n\nexport default function ProjectCard(props) {\n  return (\n    <div className=\"project-card-main-div\">\n      <p className=\"project-title\">{props.project.name}</p>\n      <p className=\"project-description\">{props.project.description}</p>\n      <br/>\n      <span className=\"github-repo-link\">\n          visit repository\n      </span>\n      <a\n        target=\"_blank\"\n        href={props.project.url}\n        className=\"project-github-link\"\n      >\n      \n        <img\n          target=\"_blank\"\n          href={props.project.url}\n          className=\"project-icon\"\n          src={gitIcon}\n        />\n      </a>\n      <div className=\"tech-used\">\n      {returnIcons(props.project.tech)}\n     \n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./Projects.css\";\n\nimport { projectsArray } from \"./ProjectsData\";\n\nimport ProjectCard from \"./ProjectCard\";\n\nexport default function Projects() {\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filterTerm, setFilterTerm] = useState('')\n\n  const filteredProjects = () => {\n    let projects = projectsArray.filter(project => project.name.toLowerCase().includes(searchTerm))\n\n    if (filterTerm != \"all\"){\n      let filteredProjects = projects.filter(project => project.tech.includes(filterTerm))\n      return filteredProjects\n    }\n\n    return projects\n  }\n  return (\n    <div className=\"projects-main-div\">\n    <div className=\"projects-info-div\">\n\n      <div className=\"projects-intro\">\n      <p>\n\n        A collection of projects I have made. Most are learning tools, some are\n        collections I have built over time.\n      </p>\n\n      <p>\n        This portion is also still under construction, but I hope you enjoy what's available for now!\n      </p>\n    </div>\n      </div>\n      <div className=\"projects-and-searchbar-container\">\n        {/* <SearchBar /> */}\n\n        <div className=\"searchbar-main-div\">\n        <input onChange={(e)=>setSearchTerm(e.target.value)} className=\"searchbar-input\" placeholder=\"Find a repository...\"></input>\n        \n        <select onChange={(e)=>setFilterTerm(e.target.value)} className=\"tech-dropdown\">\n        <option value=\"all\">Tech utilized</option>\n        <option value=\"javascript\">JavaScript</option>\n        <option value=\"react\">React</option>\n        <option value=\"json\">JSON-Server</option>\n        <option value=\"ruby\">Ruby</option>\n        <option value=\"rails\">Ruby on Rails</option>\n        </select>\n      </div>\n      <span className=\"projects-container\">\n        {filteredProjects().map((project, idx) => {\n          return <ProjectCard key={idx} project={project} />;\n        })}\n      </span>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport gitIcon from \"./components/projects/images/git-icon.png\";\nimport rocketDane from \"./images/Rocket-Dane.png\";\nimport piConstruction from \"./images/pika-construction.gif\";\nimport Terminal from \"./components/terminal/Terminal\";\nimport Home from \"./components/home/Home\";\nimport Projects from \"./components/projects/Projects\";\n\nfunction App() {\n  const [pets, petPikachu] = useState(0);\n\n  return (\n    <div className=\"App\">\n      {/* <img src={rocketDane} className=\"rocket-dane\" alt=\"logo\" /> */}\n      <br />\n      <Router>\n        <div>\n          <nav>\n            <Link className=\"home-link\" to=\"/\">Home</Link>||\n            <Link className=\"show-terminal\" to=\"/terminal\">\n              Terminal\n            </Link>\n            ||\n            <Link className=\"projects-link\" to=\"/projects\">\n              Pr<img src={gitIcon} className=\"icon git-1\" />jects\n            </Link>\n          </nav>\n          <br />\n          <br />\n\n          <Switch>\n            <Route path=\"/terminal\">\n              <Terminal />\n            </Route>\n            <Route path=\"/projects\">\n              <Projects />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      \n        {/* <img src={piConstruction} \n        onClick={()=>petPikachu(prev => prev + 1)}\n        className=\"construction-pika\" \n        alt=\"under construction\" />\n          <p>\n          {pets} Pikachu pets. Well done.\n          </p> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}