{"version":3,"sources":["components/projects/images/git-icon.png","images/Rocket-Dane.png","images/pika-construction.gif","components/terminal/TerminalDisplayReadouts.js","components/terminal/Terminal.js","components/home/images/austin-skyline.png","components/home/images/flatiron-logo.png","components/home/images/project-tech.png","components/home/Home.js","components/projects/ProjectsData.js","components/projects/images/javascript.svg","components/projects/images/react.svg","components/projects/images/json.svg","components/projects/images/jsonserver.png","components/projects/images/css.svg","components/projects/images/html.png","components/projects/images/ruby.svg","components/projects/images/rubyonrails.svg","components/projects/Icons.js","components/projects/ProjectCard.js","components/projects/Projects.js","components/devquarium/sounds/Axolotl.mp3","components/devquarium/sounds/nyan.mp3","components/devquarium/sounds/scary-fish.mp3","components/devquarium/sounds/pirate.mp3","components/devquarium/sounds/tardis.mp3","components/devquarium/sounds/chicken.mp3","components/devquarium/sounds/bubbles.mp3","components/devquarium/sounds/cephalapod.mp3","components/devquarium/images/axolotl.gif","components/devquarium/images/scary-fish.gif","components/devquarium/images/fishing-hook.gif","components/devquarium/images/tardis-fade.gif","components/devquarium/images/chicken.gif","components/devquarium/images/bubble-fish.gif","components/devquarium/images/octopus.gif","components/devquarium/images/nyan-cat.gif","components/devquarium/images/stereo.gif","components/devquarium/images/heart.png","components/devquarium/images/mushroom.gif","components/devquarium/DevquariumData.js","components/devquarium/Devquarium.js","App.js","reportWebVitals.js","index.js"],"names":["handleTerminalDisplay","terminalDisplay","program","launchProgram","help","terminalInitialize","commands","limmerick","commandsArray","programsArray","commandsListPTag","className","join","terminalInput","commandLine","handleChange","onChange","event","value","Terminal","useState","setTerminalDisplay","setCommandLine","setProgram","target","command","toLowerCase","includes","Home","jobDisplay","setJobDisplay","commentaryDisplay","setCommentaryDisplay","jobs","wittyBanter","techExperience","cursor","hideWhenDone","blink","hideWhenDoneDelay","map","tech","Delay","ms","Backspace","count","length","delay","src","skyline","flatiron","projectTech","href","onClick","random","Math","floor","jobRandomizer","projectsArray","name","url","description","starred","returnIcons","techArray","projectIcons","iconsArray","icon","props","alt","console","log","javascriptIcon","reactIcon","jsonIcon","jsonServerIcon","cssIcon","htmlIcon","rubyIcon","railsIcon","ProjectCard","project","gitIcon","Projects","searchTerm","setSearchTerm","filterTerm","setFilterTerm","e","placeholder","projects","filter","filteredProjects","idx","devquarium","setDisplay","axolotl","scaryFish","fishingHook","tardis","chicken","bubbles","octopus","nyan","refreshPage","window","location","reload","rightSidePanel","display","playAxolotl","playNyan","playScary","playPirate","playTardis","playChicken","playBubbles","playOctopus","handleDisplay","show","mushroom","heart","stereo","Devquarium","useSound","volume","scary","pirate","App","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdc5ac8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/git-icon.c8007a9f.png\";","export default __webpack_public_path__ + \"static/media/Rocket-Dane.3d2ba147.png\";","export default __webpack_public_path__ + \"static/media/pika-construction.af5a0265.gif\";","// Input for handling commands, return is associated to the const created below associated with the recieved terminalDisplay\n\nexport const handleTerminalDisplay = (terminalDisplay, program) => {\n    // depending on program set in terminal, it returns a different sequences of responses.\n    // match case with string in programsArray and it's related const below\n    switch (program){\n        case \"launch\":\n            return launchProgram(terminalDisplay)\n    }\n    \n};\n\n// collections of inputs for each program, named by [program]Program where [program] is recieved from Terminal\n\nconst launchProgram = (terminalDisplay) => {\n    switch (terminalDisplay) {\n        case \"clear\":\n          return \"\";\n        case \"help\":\n          return help();\n        case \"initialize\":\n          return terminalInitialize();\n        case \"commands\":\n          return commands();\n        case \"limmerick\":\n          return limmerick();\n      }\n}\n\n// array of commands available\n// string entered here needs a matching constant below it with a readout, then a switch case above to initialize it.\n\nexport const commandsArray = [\"commands\", \"clear\", \"initialize\", \"help\", \"limmerick\"]\n\n// programs available\n\nexport const programsArray = [\"launch\"]\n\n// generate dynamic list of commands as a p tag\n\nconst commandsListPTag = () => <p className=\"terminal-commands\">{commandsArray.join(\" || \")}</p>\n\n//  !!   commands returns for the terminal in the \"launch\" program\n\nexport const commands = () => {\n    return (<div>\n        <br/>\n        <p>...</p>\n        <br/>\n        <p className=\"terminal-display commands-1\">Seriously? It was literally on the screen a second ago.</p>\n        <p className=\"terminal-display commands-2\">I know devs don't read documentation, but come on now.</p>\n        <br />\n        <p className=\"terminal-display commands-3\">You REALLY can't remember?</p>\n        <br/>\n        <p className=\"terminal-display commands-4\">Fine.</p>\n        <br/>\n        {commandsListPTag()}\n        </div>)\n}\n\nexport const help = () => {\n    return (<div>\n        <p className=\"terminal-display\">I mean...I wish I could, I need some myself!</p>\n        <br/>\n        <p className=\"terminal-display help-1\">Have you tried googling it?</p>\n        </div>)\n}\n\nexport const limmerick = () => {\n    return (<div>\n                    <p className=\"terminal-display limmerick-1\">There once was a coder who came</p>\n                    <p className=\"terminal-display limmerick-2\">to a site engineered by a Dane.</p>\n                    <p className=\"terminal-display limmerick-3\">His work is unique</p>\n                    <p className=\"terminal-display limmerick-4\">and he's up for critique,</p>\n                    <p className=\"terminal-display limmerick-5\">but be gentle to cause him no pain.</p>\n                    <br/>\n                    <br/>\n                    <p className=\"terminal-display limmerick-6\">...please?</p>\n        </div>\n    )\n}\n\n\n// Initial loading screen for the terminal\n\nexport const terminalInitialize = () => {\n    return (<span>\n  <p className=\"webpack-compiling\">webpack: Compiling...</p>\n    <p className=\"webpack-compiled\">webpack: Compiled successfully.</p>\n    <p className=\"terminal-hash\">Hash: 8675309-4eva&42</p>\n    <p className=\"terminal-time\">Time: 1337ms</p>\n    <p className=\"terminal-enter-commands\">\n      Enter commands below to explore...\n    </p>\n      {commandsListPTag()}\n    </span>\n    )\n}\n\n\n//  Bottom row, terminal location and input\n\nexport const terminalInput = (commandLine, handleChange) => {\n    return (<div className=\"terminal-input-div\">\n    <span className=\"terminal-file-path\">\n      dane@Danes-Site dane-the-site %\n    </span>\n    <span className=\"terminal-input-placeholder\">\n      {commandLine ? null : \"Click here to type a command...\"}\n    </span>\n    <input\n      className=\"terminal-input\"\n      onChange={(event) => handleChange(event)}\n      value={commandLine}\n    />\n  </div>)\n}","// import \"./Terminal.css\";\nimport React, { useState } from \"react\";\n\nimport { handleTerminalDisplay, commandsArray, programsArray, terminalInput } from \"./TerminalDisplayReadouts\";\n\nfunction Terminal() {\n  const [terminalDisplay, setTerminalDisplay] = useState(\"initialize\");\n  const [commandLine, setCommandLine] = useState('')\n  const [program, setProgram] = useState('launch')\n\n  const handleChange = (event) => {\n    setCommandLine(event.target.value);\n    let command = event.target.value.toLowerCase();\n    if (commandsArray.includes(command)) {\n      setTerminalDisplay(command);\n      setCommandLine(\"\");\n    } else if (programsArray.includes(command)) {\n      setProgram(command);\n      setTerminalDisplay(\"initialize\");\n      setCommandLine(\"\");\n    }\n  };\n\n  return (\n    <div className=\"terminal-div\">\n      {handleTerminalDisplay(terminalDisplay, program)}\n      {terminalInput(commandLine, handleChange)}\n    </div>\n  );\n}\n\nexport default Terminal;\n","export default __webpack_public_path__ + \"static/media/austin-skyline.ea8c0f9e.png\";","export default __webpack_public_path__ + \"static/media/flatiron-logo.b6f2d8bc.png\";","export default __webpack_public_path__ + \"static/media/project-tech.12c6b093.png\";","import React, { useState } from \"react\";\nimport Typist from \"react-typist\";\n\nimport \"./Home.css\";\nimport skyline from \"./images/austin-skyline.png\"\nimport flatiron from \"./images/flatiron-logo.png\"\nimport projectTech from \"./images/project-tech.png\"\n\n\nexport default function Home() {\n\n  const [jobDisplay, setJobDisplay] = useState(\"Click the text!!\");\n  const [commentaryDisplay, setCommentaryDisplay] = useState(\"Then see a job and some deep, contemplative thoughts about it.\");\n\n  let jobs = [\n    \"Flatiron (Software Engineer Coach)\",\n    \"Premier Family Physicians Phyiscal Medicine Department (Site Supervisor)\",\n    \"Mary Louise Butters Brownies (Sales Representative)\",\n    \"Balloon Twister (Self employed)\",\n    \"The Altered Five - Jazz Band (Bass)\",\n    \"Easter Bunny (Art For Your Head)\",\n    \"Santa (Art For Your Head)\",\n    \"Stilt Walker (Art For Your Head)\",\n    \"Juggler (Epic Entertainment)\",\n    \"Glass Blower (Summer Apprenticeship)\",\n    \"Polka Band - Herzogenrath (Tuba)\",\n    \"Barbershop Quartet - The Main Street Men (Bass)\",\n    \"Massage Therapist (Self employed)\",\n    \"Amy's Ice Cream (Server)\",\n    \"Boy Scout (Archery Instructor)\",\n    \"Weekly Children's Music - Graceland BBQ (Bass, Tuba, Keyboard, Drums, Vocals)\",\n    \"Rowing Dock (Camp Counselor)\",\n    \"Wyatt's Plant Nursery (Landscaping, Plant Care)\",\n    \"Seton Brain and Spine Center (Physical Therapy Exercise Technician)\",\n    \"Watson's Piano Works (Piano Repairman)\",\n    \"TrekAmerica (Tour Guide)\",\n    \"Piano Tuner (Self Employed)\",\n  ];\n\n  let wittyBanter = [\n      \"I did that!\",\n      \"I remember those days fondly...What a time!\",\n      \"Oh right...I still have a warrant out for that...\",\n      \"...no further comment.\",\n      \"You could consider me an expert!\",\n      \"Oh man...I forgot about that!\",\n      \"Surprised? You shouldn't be!\",\n      \"You read that right!\",\n      \"References available upon request!\",\n      \"You know, who doesn't have that on their resume?\",\n      \"I know, I know...EVERYONE does that, but still.\",\n      \"Can you believe it?!\",\n      \"Yes, of course you can ask me about it.\",\n      \"It wasn't too bad once you got used to it.\",\n      \"Harder than you'd think!\",\n      \"I mean, who hasn't wanted to try that?\",\n      \"Why yes, I *do* do contract work!\",\n      \"Unfortunately, legally I can't discuss this until the statute of limitations expires.\",\n      \"And that's how I ended up with this scar near my bellybutton.\",\n      \"Believe it or not, I was actually in charge!\"\n  ]\n\n  const techExperience = [\n    \"SQL/Postrgress\",\n    \"CSS/HTML\",\n    \"Ruby/Ruby On Rails\",\n    \"JavaScript/React\",\n  ];\n\n  const renderTechExperience = () => {\n    return techExperience.map((tech) => {\n      // Added a delay so that shorter tech didn't erase too quickly\n      return (\n        <span>\n          <Typist.Delay ms={1000} />\n          <span>{tech}</span>\n          <Typist.Backspace count={tech.length} delay={tech.length * 100} />\n        </span>\n      );\n    });\n  };\n\n  const jobRandomizer = () => {\n    //   Randomly select a whole number between 0 and the length of the jobs array.\n      let random = Math.floor(Math.random() * jobs.length)\n      setJobDisplay(jobs[random])\n      random = Math.floor(Math.random() * wittyBanter.length)\n      setCommentaryDisplay(wittyBanter[random])\n  }\n  return (\n    <div className=\"home-main-div\">\n      <p className=\"home-name\">Dane Dawson</p>\n\n      <div className=\"developer-info\">\n        <span className=\"tech-experience-list\">\n          <Typist\n            cursor={{ hideWhenDone: true, blink: true, hideWhenDoneDelay: 400 }}\n          >\n            Developer with experience in {renderTechExperience()}\n            Full Stack Engineering\n          </Typist>\n        </span>\n      </div>\n      <hr className=\"hr-line\" />\n\n      <div className=\"general-info-div\">\n\n        <div className=\"info-block\">\n        <img className=\"info-image\" src={skyline} />\n          <p className=\"info-blurb\">\n            Born and raised in Austin, Texas, my life has been an adventurous forray into a myriad of experiences thusfar (at least, in my humble opinion). With a lifetime of diverse hobbies and jobs, many browsable below, I've made the recent career shift into tech. With initial experience at SignUp and then as I moved into teaching programming with Flatiron, I have been thankful for the opportnity to find a unique field that is a meeting point for creativity, problem solving, and communication.\n          </p>\n        </div>\n\n        <div className=\"info-block\">\n          <p className=\"info-blurb\">\n          Most recently I have been employed by Flatiron School as a Software Engineer Coach. During that time it was my responsibility to guide and teach students in the fundamentals of programming, with a primary focus in Ruby, Ruby on Rails, JavaScript, and React. I was also the scrum master and project manager for the cohorts, with duties including coordinating projects, troubleshooting and debugging code, creating materials and overseeing cohort teamwork and communication.\n             </p>\n          <div className=\"image-holder\">\n\n          <img className=\"info-image\" src={flatiron} />\n          </div>\n        </div>\n        \n        <div className=\"info-block\">\n        <img className=\"info-image\" src={projectTech} />\n          <p className=\"info-blurb\">\n            This portfolio was created with React using hooks and custom CSS throughout.A link to the repository is available in the \"Projects\" section above, with notes in the readme on resources and libraries utilized.  I also am experimenting with some ideas and concepts of front end data manipulation, and have included some pet projects as part of the site, located within the buttons above. \n            <br/>\n            <br/>\n            Be forwarned this site also contains a potentially dangerous amount of my own sense of\n            humor and personality, so proceed at your own risk (and preferably with an open, lighthearted mind).\n\n            <br/>\n            <br/>\n          \n            Please feel free to check back regularly, as this site is consistently under construction.\n\n            <br/>\n            If you have any interest in contacting me feel free to visit my <a href=\"https://www.linkedin.com/in/dane-dawson/\">LinkedIn.</a>\n          </p>\n        </div>\n\n      <div className=\"info-block\">\n        <p className=\"info-blurb jobs-description\">\n          A renaissance man of sorts, I have collected an assortment of varied work experience over the years. Click to see a randomly selected place I have actually worked, as well as the poisition I held there!\n          <br/>\n        <p onClick={() => jobRandomizer()} > ➜ Click on this text here to display a random job (and some random commentary) to the right!</p>\n        </p>\n        \n      <div className=\"info-image jobs-show\">\n        <br/>\n        <span className=\"job-name\">\n        {jobDisplay}\n        </span>\n        <br/>\n        {commentaryDisplay}\n      </div>\n        </div>\n      \n\n      </div>\n    </div>\n  );\n}\n","export const projectsArray = [\n  {\n    name: \"Dane Dawson: The Site\",\n    url: \"https://github.com/Dane-Dawson/dane-dawson.github.io\",\n    description:\n      \"This site here! Made using React, hooks, css and whatever creative madness my mind could conjure.\",\n    tech: \"javascript, react, css, html\",\n    starred: true,\n  },\n  {\n    name: \"Proptipus\",\n    url: \"https://github.com/Dane-Dawson/proptipus\",\n    description:\n      \"'Proptipus the cephalopod has a plethora of pretty pleasant past-times, but priorly preconcieved postulations prevent our poor Proptipus from performing his practical pursuits.' This lab is an exploration of Props, State, and data management in React.\",\n    tech: \"javascript, react, css, html\",\n    starred: true,\n  },\n  {\n    name: \"JSON-Server Intro\",\n    url: \"https://github.com/Dane-Dawson/json-server-practice\",\n    description:\n      \"A base introduction to JSON-Server, how to build one and how to personalize it to your needs.\",\n    tech: \"json-server, javascript\",\n    starred: true,\n  },\n  {\n    name: \"JSON DB collection\",\n    url: \"https://github.com/Dane-Dawson/json-server-collection\",\n    description: \"Accumulated data collections in JSON-server format.\",\n    tech: \"json-server, javascript\",\n    starred: false,\n  },\n  {\n    name: \"React mini coding checkpoints\",\n    url: \"https://github.com/Dane-Dawson/react-mini-coding-checkpoints\",\n    description:\n      \"A series of playful and fun React projects designed to reinforce fondational React concepts\",\n    tech: \"react, css, html, json-server, javascript\",\n    starred: true,\n  },\n  {\n    name: \"Login template - Backend\",\n    url: \"https://github.com/Dane-Dawson/logintemp-backend\",\n    description:\n      \"Part of a two part repo collection to show an example of using a Ruby on Rails API for token authentication to a React front end\",\n    tech: \"ruby, rails\",\n    starred: false,\n  },\n  {\n    name: \"Login template - Frontend\",\n    url: \"https://github.com/Dane-Dawson/logintemp-frontend\",\n    description:\n      \"Part of a two part repo collection to show an example of using a Ruby on Rails API for token authentication to a React front end\",\n    tech: \"react, css, html, javascript, rails\",\n    starred: false,\n  },\n  {\n    name: \"JavaScript mini code checkpoints\",\n    url: \"https://github.com/Dane-Dawson/Mini-Code-Challenges\",\n    description:\n      \"A foundational practice in introductory JavaScript coding including DOM manipulation, fetch(), and querySelector()\",\n      tech: \"css, html, javascript\",\n    starred: false,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/javascript.c981b611.svg\";","export default __webpack_public_path__ + \"static/media/react.0c61afcf.svg\";","export default __webpack_public_path__ + \"static/media/json.b41b34f9.svg\";","export default __webpack_public_path__ + \"static/media/jsonserver.f732b9e0.png\";","export default __webpack_public_path__ + \"static/media/css.4228c3fe.svg\";","export default __webpack_public_path__ + \"static/media/html.c5341754.png\";","export default __webpack_public_path__ + \"static/media/ruby.a19b3660.svg\";","export default __webpack_public_path__ + \"static/media/rubyonrails.ed0010ac.svg\";","import javascriptIcon from \"./images/javascript.svg\";\nimport reactIcon from \"./images/react.svg\";\nimport jsonIcon from \"./images/json.svg\";\nimport jsonServerIcon from \"./images/jsonserver.png\"\nimport cssIcon from \"./images/css.svg\"\nimport htmlIcon from \"./images/html.png\"\nimport rubyIcon from \"./images/ruby.svg\"\nimport railsIcon from \"./images/rubyonrails.svg\"\n\n\nexport const returnIcons = (techArray) => {\n    let projectIcons = iconsArray.map(icon => techArray.includes(icon.props.alt) ? icon : null )\n    console.log(projectIcons)\n    return projectIcons\n}\n\n// img tags witha  classname project-icon to catch icon styling, a classname matching the tech for background coloring\n// and an alt tag that matches the tech list in ProjectsData.js.  Icons sourced from https://simpleicons.org/\nexport const iconsArray = [\n    <img className=\"javascript project-icon\" src={javascriptIcon} alt=\"javascript\" key=\"javascript\"/>,\n    <img className=\"react project-icon\" src={reactIcon} alt=\"react\" key=\"react\"/>,\n    <img className=\"json project-icon\" src={jsonIcon} alt=\"json\" key=\"json\"/>,\n    <img className=\"json-server project-icon\" src={jsonServerIcon} alt=\"json-server\" key=\"json-server\"/>,\n    <img className=\"css project-icon\" src={cssIcon} alt=\"css\" key=\"css\"/>,\n    <img className=\"html project-icon\" src={htmlIcon} alt=\"html\" key=\"html\"/>,\n    <img className=\"ruby project-icon\" src={rubyIcon} alt=\"ruby\" key=\"ruby\"/>,\n    <img className=\"rails project-icon\" src={railsIcon} alt=\"rails\" key=\"rails\"/>,\n]","import React, { useState } from \"react\";\n\nimport \"./ProjectCard.css\"\n\nimport { returnIcons } from \"./Icons\";\nimport gitIcon from \"./images/git-icon.png\";\n\nexport default function ProjectCard(props) {\n  return (\n    <div className=\"project-card-main-div\">\n      <p className=\"project-title\">{props.project.name}</p>\n      <p className=\"project-description\">{props.project.description}</p>\n      <br/>\n      <span className=\"github-repo-link\">\n          visit repository\n      </span>\n      <a\n        target=\"_blank\"\n        href={props.project.url}\n        className=\"project-github-link\"\n      >\n      \n        <img\n          target=\"_blank\"\n          href={props.project.url}\n          className=\"project-icon\"\n          src={gitIcon}\n        />\n      </a>\n      <div className=\"tech-used\">\n      {returnIcons(props.project.tech)}\n     \n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./Projects.css\";\n\nimport { projectsArray } from \"./ProjectsData\";\n\nimport ProjectCard from \"./ProjectCard\";\n\nexport default function Projects() {\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filterTerm, setFilterTerm] = useState('')\n\n  const filteredProjects = () => {\n    let projects = projectsArray.filter(project => project.name.toLowerCase().includes(searchTerm))\n\n    if (filterTerm===\"starred\"){\n      let filteredProjects = projects.filter(project => project.starred==true)\n      return filteredProjects\n    }else if (filterTerm != \"all\"){\n      let filteredProjects = projects.filter(project => project.tech.includes(filterTerm))\n      return filteredProjects\n    }\n\n    return projects\n  }\n  return (\n    <div className=\"projects-main-div\">\n    <div className=\"projects-info-div\">\n\n      <div className=\"projects-intro\">\n      <p>\n        A collection of projects I have made. Most are learning tools, some are projects I've tinkered with.\n      </p>\n      <p>\n        This portion is also still under construction, but I hope you enjoy what's available for now!\n      </p>\n    </div>\n      </div>\n      <div className=\"projects-and-searchbar-container\">\n        {/* <SearchBar /> */}\n\n        <div className=\"searchbar-main-div\">\n        <input onChange={(e)=>setSearchTerm(e.target.value)} className=\"searchbar-input\" placeholder=\"Find a repository...\"></input>\n        \n        <select onChange={(e)=>setFilterTerm(e.target.value)} className=\"tech-dropdown\">\n        <option value=\"all\">Tech utilized</option>\n        <option value=\"starred\">Starred</option>\n        <option value=\"javascript\">JavaScript</option>\n        <option value=\"react\">React</option>\n        <option value=\"json\">JSON-Server</option>\n        <option value=\"ruby\">Ruby</option>\n        <option value=\"rails\">Ruby on Rails</option>\n        </select>\n      </div>\n      <span className=\"projects-container\">\n        {filteredProjects().map((project, idx) => {\n          return <ProjectCard key={idx} project={project} />;\n        })}\n      </span>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/Axolotl.78b75d11.mp3\";","export default __webpack_public_path__ + \"static/media/nyan.c22ef6a3.mp3\";","export default __webpack_public_path__ + \"static/media/scary-fish.d4772f29.mp3\";","export default __webpack_public_path__ + \"static/media/pirate.0ac5b0de.mp3\";","export default __webpack_public_path__ + \"static/media/tardis.53df9533.mp3\";","export default __webpack_public_path__ + \"static/media/chicken.fa2de6d3.mp3\";","export default __webpack_public_path__ + \"static/media/bubbles.3ed70e43.mp3\";","export default __webpack_public_path__ + \"static/media/cephalapod.99bc4e8d.mp3\";","export default __webpack_public_path__ + \"static/media/axolotl.bef284ab.gif\";","export default __webpack_public_path__ + \"static/media/scary-fish.064e1ae8.gif\";","export default __webpack_public_path__ + \"static/media/fishing-hook.e93bb32f.gif\";","export default __webpack_public_path__ + \"static/media/tardis-fade.ae938b18.gif\";","export default __webpack_public_path__ + \"static/media/chicken.e5710500.gif\";","export default __webpack_public_path__ + \"static/media/bubble-fish.837b5781.gif\";","export default __webpack_public_path__ + \"static/media/octopus.518f902b.gif\";","export default __webpack_public_path__ + \"static/media/nyan-cat.99fb1b63.gif\";","export default __webpack_public_path__ + \"static/media/stereo.68f99b19.gif\";","export default __webpack_public_path__ + \"static/media/heart.c698b2a6.png\";","export default __webpack_public_path__ + \"static/media/mushroom.9d3f12f1.gif\";","\nimport React, { useState } from \"react\";\n\nimport axolotl from \"./images/axolotl.gif\";\nimport scaryFish from \"./images/scary-fish.gif\";\nimport fishingHook from \"./images/fishing-hook.gif\";\nimport tardis from \"./images/tardis-fade.gif\";\nimport chicken from \"./images/chicken.gif\";\nimport bubbles from \"./images/bubble-fish.gif\";\nimport octopus from \"./images/octopus.gif\";\nimport nyan from \"./images/nyan-cat.gif\";\nimport stereo from \"./images/stereo.gif\"\n// https://www.deviantart.com/ate-bit/art/Pixel-Art-BoomBox-Animation-396425766\n\nimport heart from \"./images/heart.png\"\n\nimport mushroom from \"./images/mushroom.gif\";\n// https://wifflegif.com/gifs/706475-pixel-art-mushroom-gif\n// button bubbles - https://gfycat.com/angelicwildcondor\n// background - https://www.artstation.com/csillarodonyi\n\n\nimport Typist from \"react-typist\";\n\n\n\n\nexport const leftSidePanel = () => {\n    return (\n        <div className=\"devquarium-side-panel\">\n        <div className=\"welcome\">\n          Welcome to the\n          <div className=\"welcome-title\">Devquarium!!</div>\n          An adventure 20,000 Leagues Under the C...SS.\n        </div>\n        <div className=\"project-intro\">\n          This project is an exploration of CSS animation and effects. Everything you can see in the \"tank\" was accomplished using 9 gifs and pure CSS and, with the exception of the nyan song, everything you hear is recorded; my voice, instruments, or whatever I could find around the house.\n        </div>\n        <div className=\"enjoy-message\">\n          For now, enjoy the 90 second animation at your leisure! Try clicking on the images for links to sources and extra fun!\n        </div>\n      </div>\n    );\n  };\n\n  \nexport const devquarium = (setDisplay) => {\n  return (\n    <div className=\"devquarium-tank\">\n      <img className=\"axolotl\" src={axolotl} onClick={()=>setDisplay(\"axolotl\")}/>\n      <img className=\"scary-fish\" src={scaryFish} onClick={()=>setDisplay(\"scary\")}/>\n      <img className=\"fishing-hook\" src={fishingHook} onClick={()=>setDisplay(\"hook\")}/>\n      <img className=\"tardis\" src={tardis} onClick={()=>setDisplay(\"tardis\")}/>\n      <img className=\"chicken\" src={chicken} onClick={()=>setDisplay(\"chicken\")}/>\n      <img className=\"bubbles\" src={bubbles} onClick={()=>setDisplay(\"bubbles\")}/>\n      <img className=\"octopus\" src={octopus} onClick={()=>setDisplay(\"octopus\")}/>\n      <img className=\"nyan\" src={nyan} onClick={()=>setDisplay(\"nyan\")}/>\n    </div>\n  );\n};\n\nconst refreshPage = () => {\n    window.location.reload();\n}\n\nexport const rightSidePanel = (display, playAxolotl, playNyan, playScary, playPirate, playTardis, playChicken, playBubbles, playOctopus) => {\n  return (\n    <div className=\"devquarium-side-panel\">\n      <div className=\"panel-1\">\n          {handleDisplay(display, playAxolotl, playNyan, playScary, playPirate, playTardis, playChicken, playBubbles, playOctopus)}\n      </div>\n      <div className=\"restart-panel\">\n        <div className=\"another-castle\">\n          <Typist cursor={{ show: false }}>\n            <Typist.Delay ms={95000} />\n            Your fish are in another ca-\n            <Typist.Backspace count={4} delay={400} />\n            ...erm...\n            <Typist.Backspace count={33} delay={800} />\n            It seems your fish ran away!\n            <br />\n            Click me to restart the tank!\n          </Typist>\n        </div>\n      </div>\n      <img className=\"mushroom\" src={mushroom} onClick={refreshPage} />\n    </div>\n  );\n};\n\nconst handleDisplay = (display, playAxolotl, playNyan, playScary, playPirate, playTardis, playChicken, playBubbles, playOctopus) => {\n    switch (display) {\n        case \"none\":\n        return null\n        break;\n        case \"axolotl\":\n        return (<div className=\"display-div\">\n            <p className=\"display-name\">Axolotl</p>\n            <p className=\"display-source\">Sourced with creative commons license (and love). Click the heart image below to see their page. Click the stereo for an original tune about Axolotls.</p>\n            <a target=\"_blank\" className=\"actual-source\" href=\"https://www.withnails.tumblr.com\"><img src={heart} className=\"heart-icon\"/></a>\n            <img src={stereo} className=\"stereo-gif\"  onClick={playAxolotl}/>\n        </div>)\n        case \"scary\":\n            return (<div className=\"display-div\">\n            <p className=\"display-name\">Harold</p><p className=\"display-source\">Sourced with creative commons license (and love). Click the heart image below to see their page. Click the stereo for Harold's theme song.</p>\n            <a target=\"_blank\" className=\"actual-source\" href=\"https://www.deviantart.com/narotiza/art/Tireeie-Animated-Pixel-Art-703595484\"><img src={heart} className=\"heart-icon\"/></a>\n            <img src={stereo} className=\"stereo-gif\"  onClick={playScary}/>\n        </div>)\n        case \"hook\": \n            return (<div className=\"display-div\">\n            <p className=\"display-name\">Captain Hook</p><p className=\"display-source\">Sourced with creative commons license (and love). Click the heart image below to see their page. Click the stereo for the captains favorite joke.</p>\n            <a target=\"_blank\" className=\"actual-source\" href=\"https://giphy.com/stickers/fish-worm-poisson-8O86D1SZggIcIWe7Ee\"><img src={heart} className=\"heart-icon\"/></a>\n            <img src={stereo} className=\"stereo-gif\"  onClick={playPirate}/>\n        </div>)\n        case \"tardis\":\n            return (<div className=\"display-div\">\n            <p className=\"display-name\">TARDIS</p><p className=\"display-source\">Sourced with creative commons license (and love). Click the heart image below to see their page. Click the stereo one time to find out if it's bigger on the inside...</p>\n            <a target=\"_blank\" className=\"actual-source\" href=\"https://www.deviantart.com/astronautswhale\"><img src={heart} className=\"heart-icon\"/></a>\n            <img src={stereo} className=\"stereo-gif\"  onClick={playTardis}/>\n        </div>)\n        case \"chicken\":\n            return (<div className=\"display-div\">\n            <p className=\"display-name\">Ninja Chicken</p><p className=\"display-source\">Sourced with creative commons license (and love). Click the heart image below to see their page. Click the stereo for a Chicken Attack!</p>\n            <a target=\"_blank\" className=\"actual-source\" href=\"https://gfycat.com/uk/cluelessquaintgelding\"><img src={heart} className=\"heart-icon\"/></a>\n            <img src={stereo} className=\"stereo-gif\"  onClick={playChicken}/>\n        </div>)\n        break;\n        case \"bubbles\":\n            return (<div className=\"display-div\">\n            <p className=\"display-name\">Bubbles The Fish</p><p className=\"display-source\">Sourced with creative commons license (and love). Click the heart image below to see their page. Click the stereo (once!) to hear Bubbles favorite song.</p>\n            <a target=\"_blank\" className=\"actual-source\" href=\"https://br.pinterest.com/pin/792211390676963069/\"><img src={heart} className=\"heart-icon\"/></a>\n            <img src={stereo} className=\"stereo-gif\"  onClick={playBubbles}/>\n        </div>)\n        break;\n        case \"octopus\":\n            return (<div className=\"display-div\">\n            <p className=\"display-name\">Oswald</p><p className=\"display-source\">Sourced with creative commons license (and love). Click the heart image below to see their page. Click the stereo (just once!) to hear Oswald's barbershop group singing about their favorite animals!</p>\n            <a target=\"_blank\" className=\"actual-source\" href=\"http://rexsmealart.com/pixelart\"><img src={heart} className=\"heart-icon\"/></a>\n            <img src={stereo} className=\"stereo-gif\"  onClick={playOctopus}/>\n        </div>)\n        break;\n        case \"nyan\":\n            return (<div className=\"display-div\">\n            <p className=\"display-name\">Nyan Cat</p><p className=\"display-source\">Sourced with creative commons license (and love). Click the heart image below to see their page. Click the stereo (just once!) for a blast down memory lane.</p>\n            <a target=\"_blank\" className=\"actual-source\" href=\"https://gfycat.com/accurateagreeabledairycow\"><img src={heart} className=\"heart-icon\"/></a>\n            <img src={stereo} className=\"stereo-gif\"  onClick={playNyan}/>\n        </div>)\n        break;\n    }\n}","// import \"./Terminal.css\";\nimport React, { useState } from \"react\";\nimport \"./Devquarium.css\";\nimport useSound from 'use-sound';\n\nimport axolotl from \"./sounds/Axolotl.mp3\"\nimport nyan from \"./sounds/nyan.mp3\"\nimport scary from \"./sounds/scary-fish.mp3\"\nimport pirate from \"./sounds/pirate.mp3\"\nimport tardis from \"./sounds/tardis.mp3\"\nimport chicken from \"./sounds/chicken.mp3\"\nimport bubbles from \"./sounds/bubbles.mp3\"\nimport octopus from \"./sounds/cephalapod.mp3\"\n\n\nimport { devquarium, rightSidePanel, leftSidePanel } from \"./DevquariumData\";\n\nfunction Devquarium() {\n    \nconst [playAxolotl] = useSound(axolotl, {volume: .05})\nconst [playNyan] = useSound(nyan, {volume: .05})\nconst [playScary] = useSound(scary, {volume: .1})\nconst [playPirate] = useSound(pirate, {volume: .15})\nconst [playTardis] = useSound(tardis, {volume: .40})\nconst [playChicken] = useSound(chicken, {volume: .15})\nconst [playBubbles] = useSound(bubbles, {volume: .15})\nconst [playOctopus] = useSound(octopus, {volume: .15})\n\n  const [display, setDisplay] = useState('none')\n\n  return (\n    <div className=\"devquarium-main-div\">\n      {leftSidePanel()}\n      {devquarium(setDisplay)}\n      {rightSidePanel(display, playAxolotl, playNyan, playScary, playPirate, playTardis, playChicken, playBubbles, playOctopus)}\n    </div>\n  );\n}\n\nexport default Devquarium;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport gitIcon from \"./components/projects/images/git-icon.png\";\nimport rocketDane from \"./images/Rocket-Dane.png\";\nimport piConstruction from \"./images/pika-construction.gif\";\nimport Terminal from \"./components/terminal/Terminal\";\nimport Home from \"./components/home/Home\";\nimport Projects from \"./components/projects/Projects\";\nimport Devquarium from \"./components/devquarium/Devquarium\"\n\nfunction App() {\n  const [pets, petPikachu] = useState(0);\n\n  return (\n    <div className=\"App\">\n      {/* <img src={rocketDane} className=\"rocket-dane\" alt=\"logo\" /> */}\n      <br />\n      <Router>\n        <div>\n          <nav>\n            <Link className=\"home-link link\" to=\"/\">Home</Link>||\n            <Link className=\"show-terminal link\" to=\"/terminal\">\n              Terminal\n            </Link>\n            ||\n            <Link className=\"projects-link link\" to=\"/projects\">\n              Pr<img src={gitIcon} className=\"icon git-1\" />jects\n            </Link>\n            ||\n            <Link className=\"devquarium-link link\" to=\"/devquarium\">\n              Devquariums\n            </Link>\n          </nav>\n          <br />\n          <br />\n\n          <Switch>\n            <Route path=\"/terminal\">\n              <Terminal />\n            </Route>\n            <Route path=\"/projects\">\n              <Projects />\n            </Route>\n            <Route path=\"/devquarium\">\n              <Devquarium />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n      \n        {/* <img src={piConstruction} \n        onClick={()=>petPikachu(prev => prev + 1)}\n        className=\"construction-pika\" \n        alt=\"under construction\" />\n          <p>\n          {pets} Pikachu pets. Well done.\n          </p> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}